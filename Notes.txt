COMMAND LINE

echo "# tickets-viewer" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:BadProfessor/tickets-viewer.git
git push -u origin main

npx create-react-app tickets-viewer
cd .\tickets-viewer
npm i
npm audit fix
npm i axios

npm start

API DOCS:
https://developer.zendesk.com/rest_api/docs/support/tickets

https://support.zendesk.com/hc/en-us/articles/115000510267-How-can-I-authenticate-API-requests-

END-Points:
https://z3nadvocate99.zendesk.com/api/v2/tickets.json

Path:
node_modules\eslint-webpack-plugin\dist\options.json


    Connect to the Zendesk API
    Request all the tickets for your account
    Display them in a list
    Display individual ticket details
    Page through tickets when more than 25 are returned

Non-functional requirements:

    Include a README with installation and usage instructions
    The UI can be browser-based or CLI (see example output below)
    The amount of data you display in the ticket list view and the single ticket view is up to you
    How you format and display the ticket data is up to you, just make sure it is easy to read
    The Ticket Viewer should handle the API being unavailable
    We need to see you write at least a few positive path tests

Criteria for Candidate Assessment:

1. Meets requirements:

    No extra features are added. 
    All required features have been attempted.

2. Displays some knowledge of application design:

    Separation of concerns.
    Simplicity.

3. Handles basic errors:

    Displays a friendly error message if the API is unavailable or the response is invalid.
    Tells the user something is wrong if there is a program error.

4. Includes tests. 

5. UI is easy to use and displays ticket results clearly.

6. Code demonstrates:

    Consistency.
    Adherence to common standards.

Download pdf to see the examples

Note: These are really basic samples only and not to be taken as prescriptive. We encourage you to format the ticket output in your own way.
Download attachment (sample_output.pdf)

As a response to this task

Please upload a ZIP file with the whole working project or the link to code repository. 

We will look at the general technical features of your project:

    Language proficiency
    App runs
    Attention to detail
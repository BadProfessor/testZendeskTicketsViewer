COMMAND LINE

echo "# tickets-viewer" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:BadProfessor/tickets-viewer.git
git push -u origin main

npx create-react-app tickets-viewer
cd .\tickets-viewer
npm i
npm audit fix
npm i axios

npm start

API DOCS:
https://developer.zendesk.com/rest_api/docs/support/tickets

https://support.zendesk.com/hc/en-us/articles/115000510267-How-can-I-authenticate-API-requests-

END-Points:
https://z3nadvocate99.zendesk.com/api/v2/tickets.json

Path:
node_modules\eslint-webpack-plugin\dist\options.json

Tasks:

Connect to the Zendesk API                                                      +
Request all the tickets for your account                                        +
Display them in a list                                                          +
Display individual ticket details                                               +
Page through tickets when more than 25 are returned                             +



Include a README with installation and usage instructions                       +
The UI can be browser-based or CLI (see example output below)                   +
Ticket list view and the single ticket view                                     -
How you format and display the ticket data is up to you                         -
The Ticket Viewer should handle the API being unavailable                       -
We need to see you write at least a few positive path tests                     -

No extra features are added.                                                    +
All required features have been attempted.                                      -

Separation of concerns.                                                         -
Simplicity.                                                                     -

Friendly error message if the API is unavailable or the response is invalid.    -
Tells the user something is wrong if there is a program error.                  -

Includes tests.                                                                 -

UI is easy to use and displays ticket results clearly.                          -

Consistency.                                                                    -
Adherence to common standards.                                                  -